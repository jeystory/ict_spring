/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-04-09 03:23:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_005forder_005fstatus_005fupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/views/menu_main.jsp", Long.valueOf(1586229459631L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1582768957599L));
    _jspx_dependants.put("jar:file:/C:/study/springstudy/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Web_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/bottom.jsp", Long.valueOf(1585202317451L));
    _jspx_dependants.put("jar:file:/C:/study/springstudy/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Web_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>구매 정보 업데이트</title>\r\n");
      out.write("<link rel = \"stylesheet\" href=\"resources/css/cust_tb.css\">\r\n");
      out.write("<link rel = \"stylesheet\" href=\"resources/css/sw_form.css\">\r\n");
      out.write("<link rel = \"stylesheet\"  href=\"resources/css/sw_layout.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/jquery-3.4.1.min.js\"></script> \r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t*{\r\n");
      out.write("\tmargin : 0;\r\n");
      out.write("\tpadding : 0;\r\n");
      out.write("}\r\n");
      out.write("\tselect{ width : 200px;}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>menu main</title>\r\n");
      out.write("<link rel = \"stylesheet\" href=\"resources/css/cust_tb.css\">\r\n");
      out.write("<link rel = \"stylesheet\"  href=\"resources/css/sw_layout.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t#main_menu_bar {\r\n");
      out.write("  \t\tlist-style-type: none;\r\n");
      out.write("  \t\tmargin: 0;\r\n");
      out.write("  \t\toverflow: hidden;\r\n");
      out.write("  \t\tbackground-color : lightcoral;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t#main_menu_bar li {\r\n");
      out.write("  \t\tdisplay: inline-block;\r\n");
      out.write("\t}\r\n");
      out.write(" \r\n");
      out.write("\tli a, .dropbtn {\r\n");
      out.write(" \t\tdisplay: inline-block;\r\n");
      out.write("  \t\tcolor: white;\r\n");
      out.write("  \t\ttext-align: center;\r\n");
      out.write("  \t\tpadding: 14px 16px; \r\n");
      out.write("  \t\ttext-decoration: none;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t#main_menu_bar li a:hover, .dropdown:hover .dropbtn {\r\n");
      out.write("  \t\t/* background-color: #ff1a48; */\r\n");
      out.write("  \t\tColor : black;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tli.dropdown { display: inline-block;}\r\n");
      out.write("\r\n");
      out.write("\t.dropdown-content {\r\n");
      out.write("  \t\tdisplay: none;\r\n");
      out.write("  \t\tposition: absolute;\r\n");
      out.write("  \t\tbackground-color : lightcoral;\r\n");
      out.write("  \t\tcolor : white;\r\n");
      out.write("  \t\tmin-width: 160px;\r\n");
      out.write("  \t\tbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); \r\n");
      out.write("  \t\tz-index: 1;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.dropdown-content a {\r\n");
      out.write(" \t \tcolor: white;\r\n");
      out.write("  \t\tpadding: 12px 16px; \r\n");
      out.write("  \t\ttext-decoration: none;\r\n");
      out.write("  \t\tdisplay: block;\r\n");
      out.write("  \t\ttext-align: left;\r\n");
      out.write("\t\tfloat : left \r\n");
      out.write("\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/* .dropdown-content a:hover { background-color: #ff4c4c;} */\r\n");
      out.write("\r\n");
      out.write("\t.dropdown:hover .dropdown-content {display: block;}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<p>\r\n");
      out.write("\t<div class=\"header\">\r\n");
      out.write("\t\t<img src=\"resources/images/banner2.png\" alt=\"top_banner\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<ul id = \"main_menu_bar\">\r\n");
      out.write("\t\t<li><a href=\"index.do\">Home</a></li>\r\n");
      out.write("  \t\t<li class = \"dropdown\"><a href=\"item.do?item_category=1\" class=\"dropbtn\">Menu</a>\r\n");
      out.write("  \t\t\t<div class=\"dropdown-content\" >\r\n");
      out.write("      \t\t\t<a href=\"item.do?item_category=1\">Cookie & Muffin </a>\r\n");
      out.write("      \t\t\t<a href=\"item.do?item_category=2\">Bread</a>\r\n");
      out.write("      \t\t\t<a href=\"item.do?item_category=3\">Dessert</a>\r\n");
      out.write("      \t\t\t<!-- <a href = \"address_test.do\">주소테스트</a> -->\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</li>\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t\t<li><a href=\"event.do\">Event</a></li>\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t\t<li class = \"dropdown\"><a href=\"main_notice.do\" class=\"dropbtn\">고객센터</a>\t\t\t\r\n");
      out.write("  \t\t\t<div class=\"dropdown-content\">\r\n");
      out.write("      \t\t\t<a href=\"main_notice.do\">공지사항</a>\r\n");
      out.write("      \t\t\t<a href=\"item_qa.do\">Q/A</a>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</li>\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t\t<li style=\"float:right;\"><a href=\"cart_list.do?cust_id=mvo.id\"><img src=\"resources/images/cart.png\" alt=\"cart\" style=\"width:42px;height:30px;\"></a></li>\r\n");
      out.write(" \t\t<li style=\"float:right;\"><a href=\"login.do\"><img src=\"resources/images/login.png\" alt=\"login\" style=\"float:right;width:42px;height:30px;\"></a></li>\r\n");
      out.write(" \t\t</div>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t\r\n");
      out.write("  </p>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<div class = \"admin_content\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu_admin.jsp", out, true);
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("\t<div class = \"main_content\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr><th></th><th></th><th></th></tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody></tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"footer\">");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<p>Copyright 2020 SweetForest</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
